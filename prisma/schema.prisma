// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                     Int                      @id @default(autoincrement())
  email                  String                   @unique
  username               String                   @unique
  password               String
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
  token                  AuthToken[]
  TennisTournament       Tournament[]
  TournamentRegistration TournamentRegistration[]
  UserRole               UserRole[]
}

model UserRole {
  id     Int  @id @default(autoincrement())
  roleId Int // Role Enum
  userId Int
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "userRole_userId_fkey")
}

model AuthToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "authToken_userId_fkey")
}

model Tournament {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @unique
  description            String
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
  createdBy              Int                      @map("userId")
  user                   User                     @relation(fields: [createdBy], references: [id], onDelete: Cascade)
  TournamentRegistration TournamentRegistration[]

  @@index([createdBy], map: "tennisTournament_userId_fkey")
  @@map("TennisTournament")
}

model TournamentRegistration {
  id           Int        @id @default(autoincrement())
  createdAt    DateTime   @default(now())
  userId       Int
  tournamentId Int
  user         User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  tournament   Tournament @relation(fields: [tournamentId], references: [id], onDelete: Cascade)

  @@index([userId], map: "tournamentRegistration_userId_fkey")
  @@index([tournamentId], map: "tournamentRegistration_tournamentId_fkey")
}
